FROM python:3.10-slim

WORKDIR /app

# Install system dependencies and uv
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && pip install --no-cache-dir uv

# Install Dagster packages with uv
RUN uv pip install --system --no-cache-dir \
    dagster \
    dagit \
    dagster-graphql \
    dagster-webserver \
    dagster-postgres \
    dagster-docker

# Copy requirements and install Python dependencies
COPY setup.py .
RUN uv pip install --system --no-cache-dir -e .[dev]

# Create necessary directories
RUN mkdir -p /data/dagster_home /data/cache /data/logs /data/models/cache

# Copy Dagster instance configuration
COPY src/config/dagster.yaml /data/dagster_home/dagster.yaml

# Set environment variables
ENV PYTHONPATH=/app
ENV DAGSTER_HOME=/data/dagster_home

# Copy source code
COPY src ./src

# Install additional dependencies with uv
RUN uv pip install --system --no-cache-dir \
    numpy \
    scikit-learn \
    sentence-transformers \
    pydantic \
    pydantic-settings \
    pydantic-ai==0.0.22 \
    torch \
    psutil \
    requests \
    tqdm

# Create a startup script
RUN echo '#!/bin/bash\n\
# Setup Dagster home\n\
mkdir -p $DAGSTER_HOME\n\
cp /app/src/config/dagster.yaml $DAGSTER_HOME/\n\
cp /app/src/config/workspace.yaml $DAGSTER_HOME/\n\
\n\
# Clean up any existing SQLite databases to avoid conflicts\n\
rm -f $DAGSTER_HOME/history.db\n\
rm -f $DAGSTER_HOME/schedules.db\n\
rm -f $DAGSTER_HOME/runs.db\n\
\n\
# Set Python path\n\
export PYTHONPATH=/app:$PYTHONPATH\n\
\n\
# Start the Dagster daemon in the background\n\
dagster-daemon run -m src.core &\n\
\n\
# Start the gRPC server in the background\n\
dagster api grpc -m src.core --host 0.0.0.0 --port 4000 &\n\
\n\
# Start the webserver in the foreground\n\
dagster-webserver --host 0.0.0.0 --port 3000 -m src.core\n'\
> /start.sh && chmod +x /start.sh

# Start using the script
CMD ["/start.sh"] 